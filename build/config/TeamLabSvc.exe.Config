<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="teamlab" type="ASC.TeamLabSvc.Configuration.TeamLabSvcConfigurationSection, TeamLabSvc" />
    <section name="jabberServer" type="ASC.Xmpp.Server.Configuration.JabberConfigurationSection, ASC.Xmpp.Server" />
    <section name="fullTextIndex" type="ASC.FullTextIndex.Service.Config.TextIndexCfgSectionHandler, ASC.FullTextIndex" />
    <section name="notify" type="ASC.Notify.Config.NotifyServiceCfgSectionHandler, ASC.Notify" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <section name="storage" type="ASC.Data.Storage.Configuration.StorageConfigurationSection, ASC.Data.Storage" />
    <section name="autoreply" type="ASC.Mail.Autoreply.AutoreplyServiceConfiguration, ASC.Mail.Autoreply" />
    <section name="feed" type="ASC.Feed.Aggregator.Config.FeedConfigurationSection, ASC.Feed.Aggregator" />
    <section name="apiClient" type="ASC.Api.Client.ApiClientConfiguration, ASC.Api.Client" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>
  <apiClient root="/api/2.0/" scheme="Https" />
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <probing privatePath="x64;x86" />
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.1.0.0" newVersion="2.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.1.0.0" newVersion="2.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Cors" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.0.0" newVersion="5.2.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http.Primitives" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.2.28.0" newVersion="4.2.28.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.data>
    <DbProviderFactories>
      <clear />
      <add name="MySQL Data Provider" invariant="MySql.Data.MySqlClient" description=".Net Framework Data Provider for MySQL" type="MySql.Data.MySqlClient.MySqlClientFactory, MySql.Data" />
    </DbProviderFactories>
  </system.data>
  <appSettings>
    <add key="core.base-domain" value="localhost" />
    <add key="core.machinekey" value="Vskoproizvolny Salt par Chivreski" />
    <add key="web.help-center" value="http://helpcenter.onlyoffice.com/{ru|de|fr|es|lv|it}" />
    <add key="web.hub" value="http://localhost:9899/" />
    <add key="web.enable-signalr" value="false" />
    <add key="jabber.from-teamlab-to-onlyoffice" value="false" />
    <add key="owin:appStartup" value="ASC.SignalR.Base.Startup, ASC.SignalR.Base" />
    <add key="messaging.enabled" value="true" />
  </appSettings>
  <connectionStrings>
    <clear />
    <add name="default" connectionString="Server=localhost;Database=onlyoffice;User ID=root;Password=onlyoffice;Pooling=True;Character Set=utf8;AutoEnlist=false" providerName="MySql.Data.MySqlClient" />
  </connectionStrings>
  <teamlab>
    <services>
      <add type="ASC.Xmpp.Host.XmppServerLauncher, ASC.Xmpp.Host" />
      <add type="ASC.SignalR.Base.SignalRLauncher, ASC.SignalR.Base" />
      <add type="ASC.Notify.NotifyServiceLauncher, ASC.Notify" />
      <add type="ASC.FullTextIndex.Service.FullTextIndexLauncher, ASC.FullTextIndex" />
      <add type="ASC.Feed.Aggregator.FeedAggregatorLauncher, ASC.Feed.Aggregator" />
      <add type="ASC.Data.Backup.Service.BackupServiceLauncher, ASC.Data.Backup" />
      <add type="ASC.Mail.Autoreply.AutoreplyServiceController, ASC.Mail.Autoreply" />
    </services>
  </teamlab>
  <jabberServer>
    <listeners>
      <add name="Jabber Listener" type="ASC.Xmpp.Server.Gateway.TcpXmppListener">
        <property name="maxpacket" value="524288" />
        <property name="bindPort" value="5222" />
      </add>
      <add name="Bosh Listener" type="ASC.Xmpp.Server.Gateway.BoshXmppListener">
        <property name="maxpacket" value="524288" />
        <property name="bind" value="http://*:5280/http-poll/" />
        <property name="policyFile" value="Jabber\crossdomain.xml" />
      </add>
      <add name="SignalR Listener" type="ASC.Xmpp.Server.Gateway.SignalRXmppListener, ASC.Xmpp.Server">
      </add>
    </listeners>
    <storages>
      <add name="roster" type="ASC.Xmpp.Host.ASCRosterStore, ASC.Xmpp.Host">
        <property name="connectionStringName" value="default" />
      </add>
      <add name="vcard" type="ASC.Xmpp.Host.ASCVCardStore, ASC.Xmpp.Host">
        <property name="connectionStringName" value="default" />
      </add>
      <add name="users" type="ASC.Xmpp.Host.ASCUserStore, ASC.Xmpp.Host" />
      <add name="offline" type="ASC.Xmpp.Server.Storage.DbOfflineStore">
        <property name="connectionStringName" value="default" />
      </add>
      <add name="private" type="ASC.Xmpp.Server.Storage.DbPrivateStore">
        <property name="connectionStringName" value="default" />
      </add>
      <add name="muc" type="ASC.Xmpp.Server.Storage.DbMucStore">
        <property name="connectionStringName" value="default" />
      </add>
      <add name="archive" type="ASC.Xmpp.Server.Storage.DbMessageArchive">
        <property name="connectionStringName" value="default" />
      </add>
    </storages>
    <services>
      <add jid="" name="creator" type="ASC.Xmpp.Host.CreatorService, ASC.Xmpp.Host">
        <property name="" value="ASC.Xmpp.Server.Services.Jabber.JabberService, ASC.Xmpp.Server" />
        <property name="conference" value="ASC.Xmpp.Server.Services.Muc2.MucService, ASC.Xmpp.Server" />
        <property name="multicast" value="ASC.Xmpp.Server.Services.Multicast.MulticastService, ASC.Xmpp.Server" />
      </add>
    </services>
  </jabberServer>
  <fullTextIndex connectionStringName="default" changedCron="0 0/5 * ? * *" removedCron="0 0 0/5 ? * *" indexPath="..\Data\Index\">
    <modules>
      <add name="Blogs"><![CDATA[
        select id, concat_ws(' ', title, content, (select group_concat(t.name) from blogs_tags t where t.tenant = p.tenant and t.post_id = p.id)), 1 from blogs_posts p where LastModified >= @lastModified and Tenant = @tenant
        ]]></add>
      <add name="News"><![CDATA[
        select id, concat_ws(' ', caption, text, (select group_concat(v.name) from events_pollvariant v where v.tenant = f.tenant and v.poll = f.id)), 1 from events_feed f where LastModified >= @lastModified and Tenant = @tenant
        ]]></add>
      <add name="Bookmarks"><![CDATA[
        select BookmarkID, concat_ws(' ', (select k.URL from bookmarking_bookmark k where k.ID = b.BookmarkID), Name, Description, (select group_concat(t.Name) from bookmarking_userbookmarktag bt, bookmarking_tag t where bt.TagID = t.TagID and bt.UserBookmarkID = b.UserBookmarkID)) from bookmarking_userbookmark b where LastModified >= @lastModified and Tenant = @tenant
        ]]></add>
      <add name="Wiki"><![CDATA[
        select pagename, concat_ws(' ', pagename, (select h.body from wiki_pages_history h where h.pagename = p.pagename and h.tenant = p.tenant and h.version = p.version)), 1 from wiki_pages p where p.modified_on >= @lastModified and p.tenant = @tenant
        ]]></add>
      <add name="Forum"><![CDATA[
              select cast(id as char), concat_ws(' ', title, (select group_concat(q.name) from forum_question q where q.tenantid = t.tenantid and q.topic_id = t.id), (select group_concat(tag.name) from forum_tag tag, forum_topic_tag tt where tag.id = tt.tag_id and tt.topic_id = t.id)), 0 from forum_topic t where LastModified >= @lastModified and tenantid = @tenant
        union all select concat(cast(id as char), 'p/', cast(topic_id as char)), text, 1 from forum_post where LastModified >= @lastModified and tenantid = @tenant
        ]]></add>
      <add name="Projects"><![CDATA[
              select cast(id as char), concat_ws(' ', title, description, (select group_concat(t.title) from projects_tags t, projects_project_tag s where t.id = s.tag_id and p.id = s.project_id)), 0 from projects_projects p where last_modified_on >= @lastModified and tenant_id = @tenant
        union all select concat(cast(id as char), 's/', cast(project_id as char)), title, 0 from projects_milestones where last_modified_on >= @lastModified and tenant_id = @tenant
        union all select concat(cast(id as char), 't/', cast(project_id as char)), concat_ws(' ', title, description), 0 from projects_tasks t where last_modified_on >= @lastModified and tenant_id = @tenant
        union all select concat(cast(id as char), 'm/', cast(project_id as char)), concat_ws(' ', title, content), 1 from projects_messages where last_modified_on >= @lastModified and tenant_id = @tenant
        ]]></add>
      <add name="CRM.Contacts"><![CDATA[
        select  concat("contact_", cast(id as char)), concat_ws(' ', first_name, last_name, company_name, title, notes, industry) from crm_contact where tenant_id = @tenant and last_modifed_on >= @lastModified
        union all select  concat("contactInfo", cast(id as char),"_", cast(contact_id as char) ), data from crm_contact_info where tenant_id = @tenant and last_modifed_on >= @lastModified
        union all select concat("customField", cast(field_id as char),"_", cast(entity_id as char)), value from crm_field_value where tenant_id = @tenant and entity_type in (0,4,5) and last_modifed_on >= @lastModified
        union all select  concat("relationshipEvent", cast(id as char),"_", cast(contact_id as char) ), content from crm_relationship_event where tenant_id = @tenant and contact_id !=0 and last_modifed_on >= @lastModified
        ]]></add>
      <add name="CRM.Deals"><![CDATA[
        select concat("deal_", cast(id as char)), concat_ws(' ', title, description) from crm_deal where last_modifed_on >= @lastModified and tenant_id = @tenant
        union all select concat("customField", cast(field_id as char),"_", cast(entity_id as char)), value from crm_field_value where tenant_id = @tenant and entity_type = 1 and last_modifed_on >= @lastModified 
        union all select  concat("relationshipEvent", cast(id as char),"_", cast(entity_id as char) ), content from crm_relationship_event where tenant_id = @tenant and entity_id !=0 and entity_type = 1 and last_modifed_on >= @lastModified 
        ]]></add>
      <add name="CRM.Tasks"><![CDATA[
        select cast(id as char),  concat_ws(' ', title, description) from crm_task where last_modifed_on >= @lastModified and tenant_id = @tenant
        ]]></add>
      <add name="CRM.Cases"><![CDATA[
        select concat("cases_", cast(id as char)), concat_ws(' ', title) from crm_case where last_modifed_on >= @lastModified and tenant_id = @tenant
        union all select concat("customField", cast(field_id as char) ,"_",  cast(entity_id as char)), value from crm_field_value where tenant_id = @tenant and entity_type = 7 and last_modifed_on >= @lastModified 
        union all select  concat("relationshipEvent", cast(id as char),"_", cast(entity_id as char) ), content from crm_relationship_event where tenant_id = @tenant and entity_id !=0 and entity_type = 7 and last_modifed_on >= @lastModified
        ]]></add>
      <add name="CRM.Emails"><![CDATA[
        select  cast(i.id as char), concat(trim(concat(c.first_name, ' ', c.last_name, ' ', c.company_name)), ' ', replace(substring_index(i.data, '@', 1), '.', ' '), ' ', i.data) 
        from crm_contact c inner join crm_contact_info i on c.tenant_id=i.tenant_id and c.id=i.contact_id 
        where c.tenant_id=@tenant and i.type=1 and i.last_modifed_on >= @lastModified
        union
        select  cast(i.id as char), concat(trim(concat(c.first_name, ' ', c.last_name, ' ', c.company_name)), ' ', replace(substring_index(i.data, '@', 1), '.', ' '), ' ', i.data) 
        from crm_contact c inner join crm_contact_info i on c.tenant_id=i.tenant_id and c.id=i.contact_id 
        where c.tenant_id=@tenant and i.type=1 and c.last_modifed_on >= @lastModified
        ]]></add>
      <add name="CRM.Events"><![CDATA[
        select concat("event_", cast(id as char)), content from crm_relationship_event where tenant_id = @tenant and last_modifed_on >= @lastModified
        ]]></add>
      <add name="Files"><![CDATA[
        select cast(f.id as char), replace(f.title, '.', ' ') from files_file f where f.tenant_id = @tenant and f.modified_on >= @lastModified and f.current_version = 1
        union all select concat('d', cast(id as char)), replace(title, '.', ' ') from files_folder where tenant_id = @tenant and modified_on >= @lastModified
        ]]></add>
    </modules>
  </fullTextIndex>
  <notify connectionStringName="default" deleteSendedMessages="true">
    <process maxThreads="2" bufferSize="10" maxAttempts="10" attemptsInterval="0:5:0" />
    <senders>
      <sender name="email.sender" type="ASC.Core.Notify.Senders.SmtpSender, ASC.Core.Common" host="" port="" userName="" password="" enableSsl="" useCoreSettings="true" />
      <sender name="messanger.sender" type="ASC.Core.Notify.Senders.JabberSender, ASC.Core.Common" />
    </senders>
    <schedulers>
      <scheduler name="WhatsNew" register="ASC.Web.Studio.Core.Notify.NotifyConfiguration.RegisterSendMethods, ASC.Web.Studio" />
      <scheduler name="Calendar" register="ASC.Api.Calendar.Notification.CalendarNotifyClient.RegisterSendMethod, ASC.Api.Calendar" />
      <scheduler name="Projects" register="ASC.Web.Projects.Configuration.ProductEntryPoint.RegisterSendMethods, ASC.Web.Projects" />
      <scheduler name="Birthdays" register="ASC.Web.Community.Birthdays.BirthdaysModule.RegisterSendMethod, ASC.Web.Community.Birthdays" />
      <scheduler name="CRM" register="ASC.Web.CRM.Configuration.ProductEntryPoint.RegisterSendMethods, ASC.Web.CRM" />
    </schedulers>
  </notify>
  <feed aggregatePeriod="0:3:0" />
  <autoreply mailFolder="..\Logs\" />
  <system.serviceModel>
    <services>
      <service name="ASC.Xmpp.Host.JabberService" behaviorConfiguration="jabber">
        <endpoint address="net.tcp://0:9865/teamlabJabber" binding="netTcpBinding" contract="ASC.Core.Notify.Jabber.IJabberService" bindingConfiguration="jabber" />
      </service>
      <service name="ASC.SignalR.Base.Hubs.Chat.ReverseJabberService" behaviorConfiguration="jabber">
        <endpoint address="net.tcp://0:9888/teamlabReverseJabber" binding="netTcpBinding" contract="ASC.Core.Notify.Jabber.IReverseJabberService" bindingConfiguration="reverseJabber" />
      </service>
      <service name="ASC.FullTextIndex.Service.TextSearcherService" behaviorConfiguration="default">
        <endpoint address="net.tcp://0:9866/teamlabSearcher" binding="netTcpBinding" contract="ASC.FullTextIndex.ITextIndexService" bindingConfiguration="index" />
      </service>
      <service name="ASC.Notify.NotifyService" behaviorConfiguration="default">
        <endpoint address="net.tcp://0:9871/teamlabNotify" binding="netTcpBinding" contract="ASC.Notify.INotifyService" bindingConfiguration="notify" />
      </service>
    </services>
    <bindings>
      <netTcpBinding>
        <binding name="jabber" maxReceivedMessageSize="1000000" maxBufferSize="1000000" maxBufferPoolSize="1000000" maxConnections="1000000" portSharingEnabled="false" transactionFlow="false" listenBacklog="1000000">
          <security mode="None">
            <message clientCredentialType="None" />
            <transport protectionLevel="None" clientCredentialType="None" />
          </security>
          <reliableSession enabled="false" />
          <readerQuotas maxStringContentLength="1000000" maxArrayLength="1000000" />
        </binding>
        <binding name="reverseJabber" maxReceivedMessageSize="1000000" maxBufferSize="1000000" maxBufferPoolSize="1000000" maxConnections="1000000" portSharingEnabled="false" transactionFlow="false" listenBacklog="1000000">
          <security mode="None">
            <message clientCredentialType="None" />
            <transport protectionLevel="None" clientCredentialType="None" />
          </security>
          <reliableSession enabled="false" />
          <readerQuotas maxStringContentLength="1000000" maxArrayLength="1000000" />
        </binding>
        <binding name="index" openTimeout="0:0:10" receiveTimeout="0:0:10" sendTimeout="0:0:10">
          <security mode="None" />
          <readerQuotas maxStringContentLength="1000000" />
        </binding>
        <binding name="notify" openTimeout="0:0:10" receiveTimeout="0:0:10" sendTimeout="0:0:10">
          <security mode="None" />
          <readerQuotas maxStringContentLength="1000000" />
        </binding>
        <binding name="backup" openTimeout="0:0:10" receiveTimeout="0:0:10" sendTimeout="0:0:10">
          <security mode="None" />
          <readerQuotas maxStringContentLength="1000000" />
        </binding>
      </netTcpBinding>
      <basicHttpBinding>
        <binding name="billing">
          <readerQuotas maxStringContentLength="1000000" />
        </binding>
      </basicHttpBinding>
    </bindings>
    <client>
      <endpoint address="net.tcp://localhost:9865/teamlabJabber" binding="netTcpBinding" contract="ASC.Core.Notify.Jabber.IJabberService" bindingConfiguration="jabber" />
      <endpoint address="net.tcp://localhost:9888/teamlabReverseJabber" binding="netTcpBinding" contract="ASC.Core.Notify.Jabber.IReverseJabberService" bindingConfiguration="reverseJabber" />
      <endpoint address="net.tcp://localhost:9871/teamlabNotify" binding="netTcpBinding" contract="ASC.Notify.INotifyService" bindingConfiguration="notify" />
      <endpoint address="http://billing.teamlab.com/paymentsservice/v1.6/Service.svc" binding="basicHttpBinding" contract="ASC.Core.Billing.IService" bindingConfiguration="billing" />
    </client>
    <behaviors>
      <serviceBehaviors>
        <behavior name="default">
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="jabber">
          <serviceDebug includeExceptionDetailInFaults="true" />
          <serviceThrottling maxConcurrentCalls="500" maxConcurrentSessions="200" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>
  <system.net>
    <connectionManagement>
      <add address="*" maxconnection="96" />
    </connectionManagement>
  </system.net>
  <storage>
    <appender>
      <add name="generic" append="~/" />
    </appender>
    <handler>
      <add name="disc" type="ASC.Data.Storage.DiscStorage.DiscDataStore, ASC.Data.Storage" />
    </handler>
    <module>
      <add name="projects" data="1E044602-43B5-4d79-82F3-FD6208A11960" type="disc" path="products\projects\data\" virtualpath="/products\projects\data\" basedir="." />
      <add name="projects_temp" count="false" visible="false" data="00000000-0000-0000-0000-000000000000" type="disc" path="products\projects\data\{0}\temp" virtualpath="/products\projects\data\{0}\temp" basedir="." />
    </module>
  </storage>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <container name="files">
      <register type="ASC.Files.Core.IDaoFactory, ASC.Web.Files" mapTo="ASC.Files.Thirdparty.ProviderDaoFactory, ASC.Files.Thirdparty" />
    </container>
  </unity>
  <log4net>
    <addProperty>
      <key>LogDirectory</key>
      <value type="log4net.Util.PatternString">
        <converter>
          <name value="folder" />
          <type value="ASC.Common.Logging.SpecialFolderPathConverter, ASC.Common" />
        </converter>
        <!-- for unix SystemLogFolder == /var/log/ for win %TEMP% -->
        <conversionPattern value="%folder{SystemLogFolder}onlyoffice/8.1/" />
      </value>
    </addProperty>
    <logger name="ASC">
      <appender-ref ref="File" />
      <level value="WARN" />
    </logger>
    <logger name="ASC.SQL" additivity="false">
      <appender-ref ref="Sql" />
      <level value="OFF" />
    </logger>
    <logger name="ASC.Core.Billing.TariffService" additivity="false">
      <level value="OFF" />
    </logger>
    <appender name="File" type="log4net.Appender.RollingFileAppender">
      <file type="log4net.Util.PatternString">
        <converter>
          <name value="folder" />
          <type value="ASC.Common.Logging.SpecialFolderPathConverter, ASC.Common" />
        </converter>
        <conversionPattern value="%folder{LogDirectory}TeamLab" />
      </file>
      <staticLogFileName value="false" />
      <encoding value="utf-8" />
      <rollingStyle value="Date" />
      <maxSizeRollBackups value="31" />
      <datePattern value=".MM-dd.lo\g" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date %-5level [%thread] %logger - %message%newline" />
      </layout>
    </appender>
    <appender name="Sql" type="log4net.Appender.RollingFileAppender">
      <file type="log4net.Util.PatternString">
        <converter>
          <name value="folder" />
          <type value="ASC.Common.Logging.SpecialFolderPathConverter, ASC.Common" />
        </converter>
        <conversionPattern value="%folder{LogDirectory}TeamLab.SQL.log" />
      </file>
      <encoding value="utf-8" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="50MB" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%utcdate|%thread|%property{duration}|%message|%property{sql}|%property{sqlParams}%newline" />
      </layout>
    </appender>
  </log4net>
</configuration>