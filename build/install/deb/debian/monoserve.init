#!/bin/sh

### BEGIN INIT INFO
# Provides: monoserve
# Required-Start: $local_fs $syslog $remote_fs
# Required-Stop: $local_fs $syslog $remote_fs
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start FastCGI Mono server with hosts
### END INIT INFO

. /lib/lsb/init-functions

NAME=monoserve
PROGRAM=hyperfastcgi4
DAEMON=$(which $PROGRAM)
USER=onlyoffice
GROUP=$USER
LOCKFILE=/tmp/$NAME
PID=""

ARGS="/logfile=/var/log/onlyoffice/$NAME.log /config=/etc/hyperfastcgi/onlyoffice"

do_start() {
	echo -n "Starting $NAME... "
	export MONO_IOMAP=all
	export MONO_ASPNET_WEBCONFIG_CACHESIZE=2000
	export MONO_THREADS_PER_CPU=2000
	export MONO_OPTIONS="--server"
	export MONO_GC_PARAMS=nursery-size=64m

	test -e /var/run/onlyoffice || install -m 755 -o onlyoffice -g www-data -d /var/run/onlyoffice
	[ -e /var/run/onlyoffice/onlyoffice.socket ] && rm -f /var/run/onlyoffice/onlyoffice.socket
	start-stop-daemon -m -p $LOCKFILE -S -c $USER:$GROUP -x $DAEMON -- $ARGS </dev/null >/dev/null 2>&1 &
	echo "OK"
}

do_stop() {
	echo -n "Stopping $NAME... "
	kill $PID
	count=0
	while ps -p $PID >/dev/null && [ $count -lt 5 ]; do sleep 1; count=$((count+1)); done;
	if ps -p $PID >/dev/null; then kill -9 $PID; fi;
	echo "OK"
}

get_pid() {
	PID=$(ps auxf | grep HyperFastCgi.exe | grep $NAME.log | grep -v grep | awk '{print $2}')
}

case "$1" in
	start)
		get_pid
		if [ -z "$PID" ]; then
			rm -f "$LOCKFILE"
			do_start
		fi
	;;

	stop)
		get_pid
		if [ -n "$PID" ]; then
			do_stop
			rm -f "$LOCKFILE"
		fi
	;;

	status)
		get_pid
		if [ -z "$PID" ]; then
			echo "$NAME is not running"
		else
			echo "$NAME is running (pid $PID)"
		fi
	;;

	restart|force-reload)
		get_pid
		[ -n "$PID" ] && do_stop
		rm -f "$LOCKFILE"
		sleep 2
		do_start
	;;

	*)
		echo $"Usage: $0 {start|stop|status|restart|force-reload}"
	;;
esac

exit 0
